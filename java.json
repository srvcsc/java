{
	    "pr": {
        "prefix": "pr",
        "body": [
            "System.out.print($0);"
        ]
    },
	"fileio": {
		"prefix": "fileio",
		"body": [
			"static {",
			"\t\tif (System.getProperty(\"LOCAL\") != null) {",
			"\t\t\ttry {",
			"\t\t\t\tSystem.setIn(new FileInputStream(\"input.txt\"));",
			"\t\t\t\tSystem.setOut(new PrintStream(\"output.txt\"));",
			"\t\t\t} catch (Exception e) {",
			"\t\t\t\te.printStackTrace();",
			"\t\t\t}",
			"\t\t}",
			"\t}"
		]
	},
	    "Main": {
        "prefix": "Main",
        "body": [
            "import java.io.BufferedReader;",
            "import java.io.IOException;",
            "import java.io.InputStreamReader;",
            "import java.util.StringTokenizer;",
            "",
            "public class Main {",
            "\tstatic class sc {",
            "\t\tstatic BufferedReader br;",
            "\t\tstatic StringTokenizer st;",
            "",
            "\t\tstatic {",
            "\t\t\tbr = new BufferedReader(new InputStreamReader(System.in));",
            "\t\t}",
            "",
            "\t\tstatic String next() {",
            "\t\t\twhile (st == null || !st.hasMoreElements()) {",
            "\t\t\t\ttry {",
            "\t\t\t\t\tst = new StringTokenizer(br.readLine());",
            "\t\t\t\t} catch (IOException e) {",
            "\t\t\t\t\te.printStackTrace();",
            "\t\t\t\t}",
            "\t\t\t}",
            "\t\t\treturn st.nextToken();",
            "\t\t}",
            "",
            "\t\tstatic int nextInt() {",
            "\t\t\treturn Integer.parseInt(next());",
            "\t\t}",
            "",
            "\t\tstatic long nextLong() {",
            "\t\t\treturn Long.parseLong(next());",
            "\t\t}",
            "",
            "\t\tstatic int[] nextIntArray(int len) {",
            "\t\t\tint[] ans = new int[len];",
            "\t\t\tfor (int i = 0; i < len; ++i) {",
            "\t\t\t\tans[i] = sc.nextInt();",
            "\t\t\t}",
            "\t\t\treturn ans;",
            "\t\t}",
            "",
            "\t\tstatic long[] nextLongArray(int len) {",
            "\t\t\tlong[] ans = new long[len];",
            "\t\t\tfor (int i = 0; i < len; ++i) {",
            "\t\t\t\tans[i] = sc.nextLong();",
            "\t\t\t}",
            "\t\t\treturn ans;",
            "\t\t}",
            "",
            "\t\tstatic StringBuilder[] nextStringArray(int len) {",
            "\t\t\tStringBuilder[] ans = new StringBuilder[len];",
            "\t\t\tfor (int i = 0; i < len; ++i) {",
            "\t\t\t\tans[i] = new StringBuilder(sc.next());",
            "\t\t\t}",
            "\t\t\treturn ans;",
            "\t\t}",
            "\t}",
            "",
            "\tpublic static final int MOD = 1000_000_007;",
            "\tpublic static final int OMOD = 998_244_353;",
            "",
            "\tpublic static void main(String[] args) throws Exception {",
            "\t\tint tc = 1;",
            "\t\ttc = sc.nextInt();",
            "\t\tfor (int i = 1; i <= tc; ++i) {",
            "\t\t\tsolve();",
            "\t\t}",
            "",
            "\t}",
            "",
            "\tpublic static void solve() throws Exception {",
            "\t\t$0",
            "\t}",
            "}"
        ]
    },
	    "test": {
        "prefix": "test",
        "body": [
            "import java.io.BufferedReader;",
            "import java.io.IOException;",
            "import java.io.InputStreamReader;",
            "import java.util.StringTokenizer;",
            "",
            "public class Test {",
            "\tstatic class sc {",
            "\t\tstatic BufferedReader br;",
            "\t\tstatic StringTokenizer st;",
            "",
            "\t\tstatic {",
            "\t\t\tbr = new BufferedReader(new InputStreamReader(System.in));",
            "\t\t}",
            "",
            "\t\tstatic String next() {",
            "\t\t\twhile (st == null || !st.hasMoreElements()) {",
            "\t\t\t\ttry {",
            "\t\t\t\t\tst = new StringTokenizer(br.readLine());",
            "\t\t\t\t} catch (IOException e) {",
            "\t\t\t\t\te.printStackTrace();",
            "\t\t\t\t}",
            "\t\t\t}",
            "\t\t\treturn st.nextToken();",
            "\t\t}",
            "",
            "\t\tstatic int nextInt() {",
            "\t\t\treturn Integer.parseInt(next());",
            "\t\t}",
            "",
            "\t\tstatic long nextLong() {",
            "\t\t\treturn Long.parseLong(next());",
            "\t\t}",
            "",
            "\t\tstatic int[] nextIntArray(int len) {",
            "\t\t\tint[] ans = new int[len];",
            "\t\t\tfor (int i = 0; i < len; ++i) {",
            "\t\t\t\tans[i] = sc.nextInt();",
            "\t\t\t}",
            "\t\t\treturn ans;",
            "\t\t}",
            "",
            "\t\tstatic long[] nextLongArray(int len) {",
            "\t\t\tlong[] ans = new long[len];",
            "\t\t\tfor (int i = 0; i < len; ++i) {",
            "\t\t\t\tans[i] = sc.nextLong();",
            "\t\t\t}",
            "\t\t\treturn ans;",
            "\t\t}",
            "\t}",
            "",
            "\tpublic static final int MOD = 1000_000_007;",
            "\tpublic static final int OMOD = 998_244_353;",
            "",
            "\tpublic static void main(String[] args) throws Exception {",
            "\t\tint tc = 1;",
            "\t\t// tc = sc.nextInt();",
            "\t\tfor (int i = 1; i <= tc; ++i) {",
            "\t\t\tsolve();",
            "\t\t}",
            "",
            "\t}",
            "",
            "\tpublic static void solve() throws Exception {",
            "\t\t$0",
            "\t}",
            "}"
        ]
    }
}